{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PokemonRow","_ref","pokemon","onSelect","react_default","a","createElement","name","english","type","join","onClick","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","filter","setFilter","_React$useState3","_React$useState4","selectedItem","setSelectedItem","style","margin","width","paddingTop","className","display","gridTemplateColumns","gridColumnGap","value","onChange","evt","target","toLowerCase","includes","toLocaleLowerCase","slice","map","App_PokemonRow","key","id","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"oMAIMA,SAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,SAAZ,OACjBC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKJ,EAAQK,KAAKC,SAClBJ,EAAAC,EAAAC,cAAA,UAAKJ,EAAQO,KAAKC,KAAK,OACvBN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMR,IAAvB,eA4DSS,MAvDf,WAAe,IAAAC,EACeC,IAAMC,SAAS,IAD9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACNM,EADMH,EAAA,GACEI,EADFJ,EAAA,GAAAK,EAE2BP,IAAMC,SAAS,MAF1CO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEQE,EAFRF,EAAA,GAGb,OACElB,EAAAC,EAAAC,cAAA,OACEmB,MAAO,CACLC,OAAQ,OACRC,MAAO,IACPC,WAAY,QAGdxB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,SAAd,kBACAzB,EAAAC,EAAAC,cAAA,OACEmB,MAAO,CACLK,QAAS,OACTC,oBAAqB,UACrBC,cAAe,SAGjB5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACE2B,MAAOd,EACPe,SAAU,SAACC,GAAD,OAASf,EAAUe,EAAIC,OAAOH,UAE1C7B,EAAAC,EAAAC,cAAA,SAAOqB,MAAM,QACXvB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAAA,aACGJ,EACEiB,OAAO,SAACjB,GAAD,OACNA,EAAQK,KAAKC,QACV6B,cACAC,SAASnB,EAAOoB,uBAEpBC,MAAM,EAAG,IACTC,IAAI,SAACvC,GAAD,OACHE,EAAAC,EAAAC,cAACoC,EAAD,CAAYxC,QAASA,EAASyC,IAAKzC,EAAQ0C,GAAIzC,SAAU,SAACD,GAAD,OAAasB,EAAgBtB,WAK/FqB,GACCnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKiB,EAAahB,KAAKC,aCjDpBqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAjD,GAAiD,IAA9CmD,EAA8CnD,EAA9CmD,OAAQC,EAAsCpD,EAAtCoD,OAAQC,EAA8BrD,EAA9BqD,OAAQC,EAAsBtD,EAAtBsD,OAAQC,EAAcvD,EAAduD,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzD,EAAAC,EAAAC,cAACF,EAAAC,EAAMyD,WAAP,KACE1D,EAAAC,EAAAC,cAACyD,EAAD,QAOJlB","file":"static/js/main.796cda00.chunk.js","sourcesContent":["import React from \"react\";\nimport pokemon from \"./pokemon.json\";\nimport \"./App.css\";\n\nconst PokemonRow = ({ pokemon, onSelect }) => (\n  <tr>\n    <td>{pokemon.name.english}</td>\n    <td>{pokemon.type.join(\", \")}</td>\n    <td>\n      <button onClick={() => onSelect}>Select!</button>\n    </td>\n  </tr>\n);\n\nfunction App() {\n  const [filter, setFilter] = React.useState(\"\");\n  const [selectedItem, setSelectedItem] = React.useState(null);\n  return (\n    <div\n      style={{\n        margin: \"auto\",\n        width: 800,\n        paddingTop: \"1em\",\n      }}\n    >\n      <h1 className=\"title\">Pokemon Search</h1>\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"70% 30%\",\n          gridColumnGap: \"1rem\",\n        }}\n      >\n        <div>\n          <input\n            value={filter}\n            onChange={(evt) => setFilter(evt.target.value)}\n          />\n          <table width=\"100%\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n              </tr>\n            </thead>\n            <tbody>\n              {pokemon\n                .filter((pokemon) =>\n                  pokemon.name.english\n                    .toLowerCase()\n                    .includes(filter.toLocaleLowerCase())\n                )\n                .slice(0, 20)\n                .map((pokemon) => (\n                  <PokemonRow pokemon={pokemon} key={pokemon.id} onSelect={(pokemon) => setSelectedItem(pokemon)} />\n                ))}\n            </tbody>\n          </table>\n        </div>\n        {selectedItem && (\n          <div>\n            <h1>{selectedItem.name.english}</h1>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}